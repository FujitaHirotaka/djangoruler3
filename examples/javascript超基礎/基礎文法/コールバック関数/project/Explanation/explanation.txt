[概要]
関数はファーストクラスであるため、
その場で作った匿名関数を関数の引数として渡すことができます。
引数として渡される関数のことをコールバック関数と呼びます。
一方、コールバック関数を引数として使う関数やメソッドのことを
高階関数と呼びます。

function 高階関数(コールバック関数) {
    コールバック関数();
}

たとえば、Array#forEachメソッドは
コールバック関数を引数として受け取る高階関数です。 
forEachメソッドは、
配列の各要素に対してコールバック関数を一度ずつ呼び出します。

const array = [1, 2, 3];
const output = (value) => {
    console.log(value);
};
array.forEach(output);
// 次のような実行しているのと同じ
// output(1); => 1
// output(2); => 2
// output(3); => 3
実行
関数を定義して、その関数をコールバック関数として毎回渡すのは大変です。 そこで、関数はファーストクラスであることを利用して、コールバック関数となる関数式をその場で作って渡せます。

const array = [1, 2, 3];
array.forEach((value) => {
    console.log(value);
});
実行
コールバック関数は非同期処理においてもよく利用されます。 非同期処理におけるコールバック関数の利用方法については「非同期処理」の章で解説します。