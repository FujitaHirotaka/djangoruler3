[概要]
自動エスケープとは？
参考：https://hidelafoglia.wordpress.com/2009/01/09/html-%E3%81%AE%E8%87%AA%E5%8B%95%E3%82%A8%E3%82%B9%E3%82%B1%E3%83%BC%E3%83%97django-%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E8%A8%80%E8%AA%9E-%E2%80%94-django-v1-0-documentation/

テンプレートから HTML を生成するときには、
変数内の文字がHTMLのレンダリング結果を
壊してしまうというリスクが常に付きまといます。
例えば、以下のような
テンプレートフラグメントを考えてみましょう:

こんにちは {{ name }} さん

一件、このコードはユーザ名を表示するだけの無害なものに見えますが、
名前を以下のような値にすると、何が起こるでしょう:

<script>alert('hello')</script>

テンプレートは以下のようにレンダされます:

Hello, <script>alert('hello')</script>

その結果、 JavaScript の警告ボックスを表示できてしまいます！
同様に、名前に以下のようにして '<' 文字をいれると同でしょう:

<b>username
レンダ結果は以下のようになります:

Hello, <b>username

これで、以降のWebページは全部ボールド表示になってしまいます！
言うまでもなく、ユーザが入力したデータは盲目に信頼してはならず、
直接 Web ページに挿入すべきでもありません。
悪意のあるユーザはこの手の穴を使って悪さをするものです。
こうしたセキュリティホールは、 クロスサイトスクリプティング (XSS) 攻撃と呼ばれています。

クロスサイトスクリプティングを防ぐには、二つの方法があります:

まず、信頼できない変数は全て (後述の) escape フィルタを通します。
このフィルタは危険を及ぼす可能性のある HTML 文字を無害な文字に変換します。
Django では、初期の数年はこの方法をデフォルトとして採用していましたが、
ユーザ、すなわち開発者やテンプレートの作者に、
全てをエスケープするよう気配りする負荷をかけるという問題がありました。
もう一つは、自動 HTML エスケープを使うというものです。
この節の後半では、自動エスケープのからくりについて述べています。
開発版の Django では、デフォルトの設定として、
全てのテンプレートは変数タグを自動的にエスケープします。
具体的には、以下の 5 つの文字がエスケープされます:

< は "&lt;" に変換されます。
> は "&gt;" に変換されます。
"'" (クオート) は ''' に変換されます。
'"' (二重クオート) は '&quot;' に変換されます。
"&" は "&amp;" に変換されます。
この動作はデフォルトで適用されていることを強調しておきます。
Django テンプレートシステムを使っているかぎり、
エスケープに関する問題からは守られているのです。