[概要]
多対多のリレーション
多対多の (many-to-many) リレーションを定義するには ManyToManyField を使います。このフィール ドは他のフィールド型と同じように、モデルのクラス属性に含めて使えます。

ManyToManyField には固定引数が一つあり、 リレーションを張る対象のクラスを指定します。

例えば、 Pizza には複数の Topping オブジェクトを持たせられます。 すなわち、ある Topping は複数のピザの上に置けて、逆にそれぞれのピザには 複数のトッピングを置けるというわけです。このリレーションを表すには次のように します:

class Topping(models.Model):
    # ...

class Pizza(models.Model):
    # ...
    toppings = models.ManyToManyField(Topping)
ForeignKey と同様、 再帰的リレーション (自分自身に対する多対一のリレーション) や、 未定義のモデルに対するリレーション も定義できま す。 モデルフィールドのリファレンス を参照してくだ さい。

必須ではありませんが、 ManyToManyField の 名前 (上の例では toppings)は、リレーション先のモデル名の複数形にするよ う勧めます。

どちらのモデルで ManyToManyField を定義し てもかまいませんが、どちらか片方のモデルにしか必要ありません – 両方には指 定できません。

一般的に、 Django の admin を使っている場合、 ManyToManyField インスタンスを入れておく のは、 admin インタフェースで編集される側のオブジェクトにしておきます。上の 例では、 topping は (Topping に ManyToManyField の pizzas をもたせる のではなく) Pizza に入れておきます。というのも、「トッピングを乗せるピ ザ」と考えるよりも「ピザの上に乗せるトッピング」を考える方が自然だからです。 こうして上の例では、 Pizza の admin フォームでユーザにトッピングを選ば せることになります。

参考

完全な例は 多対多のリレーションを持つモデルの例 を参照してください。

ManyToManyField フィールドは、リレーションの動作 を定義するための引数をいくつかとれます。各引数は モデルフィールドのリ ファレンス で解説しています。引数は全てオプション です。